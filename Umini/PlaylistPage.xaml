<Page x:Class="Umini.PlaylistPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:local="clr-namespace:Umini"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="PlaylistPage">

    <Grid Background="White">
        <StackPanel Orientation="Vertical">
            <Label Margin="40 5 0 0"  Content="현재 재생 목록"/>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>
            </Grid>
            <DataGrid Grid.Row="0" x:Name="dgPlaylist" Margin="0 8 0 0" CanUserSortColumns="True" CanUserAddRows="False" AutoGenerateColumns="False" 
                      materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8" 
                      ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" >
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn Binding="{Binding IsSelected}" ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                        <DataGridCheckBoxColumn.Header>
                            <!--padding to allow hit test to pass thru for sorting -->
                            <Border Background="Transparent" Padding="6 0 6 0" HorizontalAlignment="Center">
                                <CheckBox HorizontalAlignment="Center" DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}" IsChecked="{Binding IsAllItems3Selected}" />
                            </Border>
                        </DataGridCheckBoxColumn.Header>
                    </DataGridCheckBoxColumn>
                    <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                    <!--<materialDesign:MaterialDataGridTextColumn Binding="{Binding mAllbum}" Header="Album" MaxLength="200" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"/>-->
                    <DataGridTemplateColumn Header="Album">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Source="{Binding mImagePath}" Height="50"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!-- set a max length to get an indicator in the editor -->
                    <materialDesign:MaterialDataGridTextColumn Binding="{Binding mTitle}" Header="Title" MaxLength="100" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" >
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </materialDesign:MaterialDataGridTextColumn>
                    <materialDesign:MaterialDataGridTextColumn Binding="{Binding mArtist}" Header="Artist" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </materialDesign:MaterialDataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <TextBox x:Name="txtUrl" Margin="40 5 0 0" Width="400" Text="https://www.youtube.com/watch?v=rRzxEiBLQCA"/>
                <Button Width="100" Content="URL로 추가" Margin="0 5 0 0" Click="btnURLAdd_Click"/>
            </StackPanel>

        </StackPanel>
        <Viewbox HorizontalAlignment="Left" Height="100" Margin="-260,105,0,0" VerticalAlignment="Top" Width="100"/>

    </Grid>
</Page>